// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sheetfaced.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_sheetfaced_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_sheetfaced_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3010000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3010000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_sheetfaced_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_sheetfaced_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[4]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_sheetfaced_2eproto;
namespace message {
class MotionDetectionEvent;
class MotionDetectionEventDefaultTypeInternal;
extern MotionDetectionEventDefaultTypeInternal _MotionDetectionEvent_default_instance_;
class Play;
class PlayDefaultTypeInternal;
extern PlayDefaultTypeInternal _Play_default_instance_;
class SetMotionDetectionConfig;
class SetMotionDetectionConfigDefaultTypeInternal;
extern SetMotionDetectionConfigDefaultTypeInternal _SetMotionDetectionConfig_default_instance_;
class StopPlaying;
class StopPlayingDefaultTypeInternal;
extern StopPlayingDefaultTypeInternal _StopPlaying_default_instance_;
}  // namespace message
PROTOBUF_NAMESPACE_OPEN
template<> ::message::MotionDetectionEvent* Arena::CreateMaybeMessage<::message::MotionDetectionEvent>(Arena*);
template<> ::message::Play* Arena::CreateMaybeMessage<::message::Play>(Arena*);
template<> ::message::SetMotionDetectionConfig* Arena::CreateMaybeMessage<::message::SetMotionDetectionConfig>(Arena*);
template<> ::message::StopPlaying* Arena::CreateMaybeMessage<::message::StopPlaying>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace message {

enum PacketType : int {
  MOTION_DETECTION_EVENT = 1,
  SET_MOTION_DETECTION_CONFIG = 2,
  PLAY = 129,
  STOP_PLAYING = 130
};
bool PacketType_IsValid(int value);
constexpr PacketType PacketType_MIN = MOTION_DETECTION_EVENT;
constexpr PacketType PacketType_MAX = STOP_PLAYING;
constexpr int PacketType_ARRAYSIZE = PacketType_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* PacketType_descriptor();
template<typename T>
inline const std::string& PacketType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, PacketType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function PacketType_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    PacketType_descriptor(), enum_t_value);
}
inline bool PacketType_Parse(
    const std::string& name, PacketType* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<PacketType>(
    PacketType_descriptor(), name, value);
}
// ===================================================================

class MotionDetectionEvent :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:message.MotionDetectionEvent) */ {
 public:
  MotionDetectionEvent();
  virtual ~MotionDetectionEvent();

  MotionDetectionEvent(const MotionDetectionEvent& from);
  MotionDetectionEvent(MotionDetectionEvent&& from) noexcept
    : MotionDetectionEvent() {
    *this = ::std::move(from);
  }

  inline MotionDetectionEvent& operator=(const MotionDetectionEvent& from) {
    CopyFrom(from);
    return *this;
  }
  inline MotionDetectionEvent& operator=(MotionDetectionEvent&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MotionDetectionEvent& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MotionDetectionEvent* internal_default_instance() {
    return reinterpret_cast<const MotionDetectionEvent*>(
               &_MotionDetectionEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(MotionDetectionEvent& a, MotionDetectionEvent& b) {
    a.Swap(&b);
  }
  inline void Swap(MotionDetectionEvent* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MotionDetectionEvent* New() const final {
    return CreateMaybeMessage<MotionDetectionEvent>(nullptr);
  }

  MotionDetectionEvent* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MotionDetectionEvent>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MotionDetectionEvent& from);
  void MergeFrom(const MotionDetectionEvent& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MotionDetectionEvent* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "message.MotionDetectionEvent";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_sheetfaced_2eproto);
    return ::descriptor_table_sheetfaced_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUnixTimestampMsFieldNumber = 1,
  };
  // required uint64 unix_timestamp_ms = 1;
  bool has_unix_timestamp_ms() const;
  private:
  bool _internal_has_unix_timestamp_ms() const;
  public:
  void clear_unix_timestamp_ms();
  ::PROTOBUF_NAMESPACE_ID::uint64 unix_timestamp_ms() const;
  void set_unix_timestamp_ms(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_unix_timestamp_ms() const;
  void _internal_set_unix_timestamp_ms(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:message.MotionDetectionEvent)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 unix_timestamp_ms_;
  friend struct ::TableStruct_sheetfaced_2eproto;
};
// -------------------------------------------------------------------

class SetMotionDetectionConfig :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:message.SetMotionDetectionConfig) */ {
 public:
  SetMotionDetectionConfig();
  virtual ~SetMotionDetectionConfig();

  SetMotionDetectionConfig(const SetMotionDetectionConfig& from);
  SetMotionDetectionConfig(SetMotionDetectionConfig&& from) noexcept
    : SetMotionDetectionConfig() {
    *this = ::std::move(from);
  }

  inline SetMotionDetectionConfig& operator=(const SetMotionDetectionConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetMotionDetectionConfig& operator=(SetMotionDetectionConfig&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SetMotionDetectionConfig& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SetMotionDetectionConfig* internal_default_instance() {
    return reinterpret_cast<const SetMotionDetectionConfig*>(
               &_SetMotionDetectionConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(SetMotionDetectionConfig& a, SetMotionDetectionConfig& b) {
    a.Swap(&b);
  }
  inline void Swap(SetMotionDetectionConfig* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SetMotionDetectionConfig* New() const final {
    return CreateMaybeMessage<SetMotionDetectionConfig>(nullptr);
  }

  SetMotionDetectionConfig* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SetMotionDetectionConfig>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SetMotionDetectionConfig& from);
  void MergeFrom(const SetMotionDetectionConfig& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetMotionDetectionConfig* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "message.SetMotionDetectionConfig";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_sheetfaced_2eproto);
    return ::descriptor_table_sheetfaced_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSampleThresholdRatioFieldNumber = 1,
    kLockoutPeriodMsFieldNumber = 2,
  };
  // required double sample_threshold_ratio = 1;
  bool has_sample_threshold_ratio() const;
  private:
  bool _internal_has_sample_threshold_ratio() const;
  public:
  void clear_sample_threshold_ratio();
  double sample_threshold_ratio() const;
  void set_sample_threshold_ratio(double value);
  private:
  double _internal_sample_threshold_ratio() const;
  void _internal_set_sample_threshold_ratio(double value);
  public:

  // required uint64 lockout_period_ms = 2;
  bool has_lockout_period_ms() const;
  private:
  bool _internal_has_lockout_period_ms() const;
  public:
  void clear_lockout_period_ms();
  ::PROTOBUF_NAMESPACE_ID::uint64 lockout_period_ms() const;
  void set_lockout_period_ms(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_lockout_period_ms() const;
  void _internal_set_lockout_period_ms(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:message.SetMotionDetectionConfig)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  double sample_threshold_ratio_;
  ::PROTOBUF_NAMESPACE_ID::uint64 lockout_period_ms_;
  friend struct ::TableStruct_sheetfaced_2eproto;
};
// -------------------------------------------------------------------

class Play :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:message.Play) */ {
 public:
  Play();
  virtual ~Play();

  Play(const Play& from);
  Play(Play&& from) noexcept
    : Play() {
    *this = ::std::move(from);
  }

  inline Play& operator=(const Play& from) {
    CopyFrom(from);
    return *this;
  }
  inline Play& operator=(Play&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Play& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Play* internal_default_instance() {
    return reinterpret_cast<const Play*>(
               &_Play_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(Play& a, Play& b) {
    a.Swap(&b);
  }
  inline void Swap(Play* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Play* New() const final {
    return CreateMaybeMessage<Play>(nullptr);
  }

  Play* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Play>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Play& from);
  void MergeFrom(const Play& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Play* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "message.Play";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_sheetfaced_2eproto);
    return ::descriptor_table_sheetfaced_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMotionEventUnixTimestampMsFieldNumber = 1,
  };
  // required uint64 motion_event_unix_timestamp_ms = 1;
  bool has_motion_event_unix_timestamp_ms() const;
  private:
  bool _internal_has_motion_event_unix_timestamp_ms() const;
  public:
  void clear_motion_event_unix_timestamp_ms();
  ::PROTOBUF_NAMESPACE_ID::uint64 motion_event_unix_timestamp_ms() const;
  void set_motion_event_unix_timestamp_ms(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_motion_event_unix_timestamp_ms() const;
  void _internal_set_motion_event_unix_timestamp_ms(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:message.Play)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 motion_event_unix_timestamp_ms_;
  friend struct ::TableStruct_sheetfaced_2eproto;
};
// -------------------------------------------------------------------

class StopPlaying :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:message.StopPlaying) */ {
 public:
  StopPlaying();
  virtual ~StopPlaying();

  StopPlaying(const StopPlaying& from);
  StopPlaying(StopPlaying&& from) noexcept
    : StopPlaying() {
    *this = ::std::move(from);
  }

  inline StopPlaying& operator=(const StopPlaying& from) {
    CopyFrom(from);
    return *this;
  }
  inline StopPlaying& operator=(StopPlaying&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const StopPlaying& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StopPlaying* internal_default_instance() {
    return reinterpret_cast<const StopPlaying*>(
               &_StopPlaying_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(StopPlaying& a, StopPlaying& b) {
    a.Swap(&b);
  }
  inline void Swap(StopPlaying* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline StopPlaying* New() const final {
    return CreateMaybeMessage<StopPlaying>(nullptr);
  }

  StopPlaying* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<StopPlaying>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const StopPlaying& from);
  void MergeFrom(const StopPlaying& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StopPlaying* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "message.StopPlaying";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_sheetfaced_2eproto);
    return ::descriptor_table_sheetfaced_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMotionEventUnixTimestampMsFieldNumber = 1,
  };
  // required uint64 motion_event_unix_timestamp_ms = 1;
  bool has_motion_event_unix_timestamp_ms() const;
  private:
  bool _internal_has_motion_event_unix_timestamp_ms() const;
  public:
  void clear_motion_event_unix_timestamp_ms();
  ::PROTOBUF_NAMESPACE_ID::uint64 motion_event_unix_timestamp_ms() const;
  void set_motion_event_unix_timestamp_ms(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_motion_event_unix_timestamp_ms() const;
  void _internal_set_motion_event_unix_timestamp_ms(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:message.StopPlaying)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 motion_event_unix_timestamp_ms_;
  friend struct ::TableStruct_sheetfaced_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// MotionDetectionEvent

// required uint64 unix_timestamp_ms = 1;
inline bool MotionDetectionEvent::_internal_has_unix_timestamp_ms() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MotionDetectionEvent::has_unix_timestamp_ms() const {
  return _internal_has_unix_timestamp_ms();
}
inline void MotionDetectionEvent::clear_unix_timestamp_ms() {
  unix_timestamp_ms_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MotionDetectionEvent::_internal_unix_timestamp_ms() const {
  return unix_timestamp_ms_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MotionDetectionEvent::unix_timestamp_ms() const {
  // @@protoc_insertion_point(field_get:message.MotionDetectionEvent.unix_timestamp_ms)
  return _internal_unix_timestamp_ms();
}
inline void MotionDetectionEvent::_internal_set_unix_timestamp_ms(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  unix_timestamp_ms_ = value;
}
inline void MotionDetectionEvent::set_unix_timestamp_ms(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_unix_timestamp_ms(value);
  // @@protoc_insertion_point(field_set:message.MotionDetectionEvent.unix_timestamp_ms)
}

// -------------------------------------------------------------------

// SetMotionDetectionConfig

// required double sample_threshold_ratio = 1;
inline bool SetMotionDetectionConfig::_internal_has_sample_threshold_ratio() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool SetMotionDetectionConfig::has_sample_threshold_ratio() const {
  return _internal_has_sample_threshold_ratio();
}
inline void SetMotionDetectionConfig::clear_sample_threshold_ratio() {
  sample_threshold_ratio_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline double SetMotionDetectionConfig::_internal_sample_threshold_ratio() const {
  return sample_threshold_ratio_;
}
inline double SetMotionDetectionConfig::sample_threshold_ratio() const {
  // @@protoc_insertion_point(field_get:message.SetMotionDetectionConfig.sample_threshold_ratio)
  return _internal_sample_threshold_ratio();
}
inline void SetMotionDetectionConfig::_internal_set_sample_threshold_ratio(double value) {
  _has_bits_[0] |= 0x00000001u;
  sample_threshold_ratio_ = value;
}
inline void SetMotionDetectionConfig::set_sample_threshold_ratio(double value) {
  _internal_set_sample_threshold_ratio(value);
  // @@protoc_insertion_point(field_set:message.SetMotionDetectionConfig.sample_threshold_ratio)
}

// required uint64 lockout_period_ms = 2;
inline bool SetMotionDetectionConfig::_internal_has_lockout_period_ms() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool SetMotionDetectionConfig::has_lockout_period_ms() const {
  return _internal_has_lockout_period_ms();
}
inline void SetMotionDetectionConfig::clear_lockout_period_ms() {
  lockout_period_ms_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SetMotionDetectionConfig::_internal_lockout_period_ms() const {
  return lockout_period_ms_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SetMotionDetectionConfig::lockout_period_ms() const {
  // @@protoc_insertion_point(field_get:message.SetMotionDetectionConfig.lockout_period_ms)
  return _internal_lockout_period_ms();
}
inline void SetMotionDetectionConfig::_internal_set_lockout_period_ms(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  lockout_period_ms_ = value;
}
inline void SetMotionDetectionConfig::set_lockout_period_ms(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_lockout_period_ms(value);
  // @@protoc_insertion_point(field_set:message.SetMotionDetectionConfig.lockout_period_ms)
}

// -------------------------------------------------------------------

// Play

// required uint64 motion_event_unix_timestamp_ms = 1;
inline bool Play::_internal_has_motion_event_unix_timestamp_ms() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool Play::has_motion_event_unix_timestamp_ms() const {
  return _internal_has_motion_event_unix_timestamp_ms();
}
inline void Play::clear_motion_event_unix_timestamp_ms() {
  motion_event_unix_timestamp_ms_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Play::_internal_motion_event_unix_timestamp_ms() const {
  return motion_event_unix_timestamp_ms_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Play::motion_event_unix_timestamp_ms() const {
  // @@protoc_insertion_point(field_get:message.Play.motion_event_unix_timestamp_ms)
  return _internal_motion_event_unix_timestamp_ms();
}
inline void Play::_internal_set_motion_event_unix_timestamp_ms(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  motion_event_unix_timestamp_ms_ = value;
}
inline void Play::set_motion_event_unix_timestamp_ms(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_motion_event_unix_timestamp_ms(value);
  // @@protoc_insertion_point(field_set:message.Play.motion_event_unix_timestamp_ms)
}

// -------------------------------------------------------------------

// StopPlaying

// required uint64 motion_event_unix_timestamp_ms = 1;
inline bool StopPlaying::_internal_has_motion_event_unix_timestamp_ms() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool StopPlaying::has_motion_event_unix_timestamp_ms() const {
  return _internal_has_motion_event_unix_timestamp_ms();
}
inline void StopPlaying::clear_motion_event_unix_timestamp_ms() {
  motion_event_unix_timestamp_ms_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 StopPlaying::_internal_motion_event_unix_timestamp_ms() const {
  return motion_event_unix_timestamp_ms_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 StopPlaying::motion_event_unix_timestamp_ms() const {
  // @@protoc_insertion_point(field_get:message.StopPlaying.motion_event_unix_timestamp_ms)
  return _internal_motion_event_unix_timestamp_ms();
}
inline void StopPlaying::_internal_set_motion_event_unix_timestamp_ms(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  motion_event_unix_timestamp_ms_ = value;
}
inline void StopPlaying::set_motion_event_unix_timestamp_ms(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_motion_event_unix_timestamp_ms(value);
  // @@protoc_insertion_point(field_set:message.StopPlaying.motion_event_unix_timestamp_ms)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace message

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::message::PacketType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::message::PacketType>() {
  return ::message::PacketType_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_sheetfaced_2eproto
